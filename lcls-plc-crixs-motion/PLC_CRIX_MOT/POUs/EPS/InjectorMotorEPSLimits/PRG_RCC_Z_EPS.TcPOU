<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1" ProductVersion="3.1.4022.18">
  <POU Name="PRG_RCC_Z_EPS" Id="{a0722060-c50e-4a96-ac46-0b4676b08166}" SpecialFunc="None">
    <Declaration><![CDATA[PROGRAM PRG_RCC_Z_EPS
VAR
    bInit 		: BOOL := TRUE;
    nIndex 		: UINT;
    nEPSIndex 	: UINT;

    pMotorDUT	: POINTER TO DUT_MotionStage;
    fbBwdEPS 	: FB_EPS;
    fbFwdEPS 	: FB_EPS;
    fbEPS		: FB_EPS;

    fRCC_Z      : LREAL;
    fRCC_Y      : LREAL;
    fDPL_Z      : LREAL;
    fDPL_Y      : LREAL;

END_VAR
]]></Declaration>
    <Implementation>
      <ST><![CDATA[IF bInit THEN
    // Set Inital Values
    aRCC_Z_EPS[1].fBwd_Limits := -1;
    aRCC_Z_EPS[1].fFwd_Limits := 80;

    aRCC_Z_EPS[2].fBwd_Limits := 40;
    aRCC_Z_EPS[2].fFwd_Limits := 80;

    bInit := FALSE;
END_IF

pMotorDUT := ADR (M39);
fbBwdEPS(eps := pMotorDut^.stEPSBackwardEnable);
fbFwdEPS(eps := pMotorDut^.stEPSForwardEnable);

fRCC_Z := M39.fPosition;
fRCC_Y := M38.fPosition;
fDPL_Z := M3.fPosition;
fDPL_Y := M2.fPosition;

fbEPS(eps:=aRCC_Z_EPS[1].stEPS);
fbEPS.setBit(0, F_InRange(fRCC_Z, -18, -11));

fbEPS(eps:=aRCC_Z_EPS[2].stEPS);
fbEPS.setBit(0, F_InRange(fDPL_Z, -10, 30));
fbEPS.setBit(1, F_InRange(fDPL_Y, -1, 40));

fbEPS(eps:=aRCC_Z_EPS[3].stEPS);
fbEPS.setBit(0, F_InRange(fDPL_Z, -10, 30));
fbEPS.setBit(1, F_InRange(fRCC_Y, -34, 10));

FOR nIndex := 1 TO 3 DO
    IF aRCC_Z_EPS[PMPS.CheckBounds(nIndex, 1, 3)].stEPS.bEPS_OK THEN
        nEPSIndex := nIndex;
    END_IF
END_FOR

IF fRCC_Z > aRCC_Z_EPS[nEPSIndex].fBwd_Limits THEN
    fbBwdEPS.setBit(UINT_TO_BYTE(nEPSIndex), TRUE);
ELSE
    fbBwdEPS.setBit(UINT_TO_BYTE(nEPSIndex), FALSE);
END_IF

IF fRCC_Z < aRCC_Z_EPS[nEPSIndex].fFwd_Limits THEN
    fbFwdEPS.setBit(UINT_TO_BYTE(nEPSIndex), TRUE);
ELSE
    fbFwdEPS.setBit(UINT_TO_BYTE(nEPSIndex), FALSE);
END_IF]]></ST>
    </Implementation>
  </POU>
</TcPlcObject>