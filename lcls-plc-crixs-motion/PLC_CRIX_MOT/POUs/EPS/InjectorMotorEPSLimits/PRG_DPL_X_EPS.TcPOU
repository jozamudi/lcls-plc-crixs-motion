<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1" ProductVersion="3.1.4022.18">
  <POU Name="PRG_DPL_X_EPS" Id="{04026f9f-33ec-468b-8c87-d293a0ccda10}" SpecialFunc="None">
    <Declaration><![CDATA[PROGRAM PRG_DPL_X_EPS
VAR
    bInit 		: BOOL := TRUE;
    nIndex 		: UINT;
    nEPSIndex 	: UINT;

    fDPL_X 		: LREAL;
    fSDS_RY 	: LREAL;
    fDPL_Z 		: LREAL;

    pMotorDUT	: POINTER TO DUT_MotionStage;
    fbBwdEPS 	: FB_EPS;
    fbFwdEPS 	: FB_EPS;
    fbEPS		: FB_EPS;

END_VAR
]]></Declaration>
    <Implementation>
      <ST><![CDATA[IF bInit THEN
    // Set Inital Values
    aDPL_X_EPS[1].fBwd_Limits := -100;
    aDPL_X_EPS[1].fFwd_Limits := -5;

    aDPL_X_EPS[2].fBwd_Limits := -5;
    aDPL_X_EPS[2].fFwd_Limits := 5;

    aDPL_X_EPS[3].fBwd_Limits := 5;
    aDPL_X_EPS[3].fFwd_Limits := -5;


    bInit := FALSE;
END_IF

fDPL_X  := M1.stAxisStatus.fActPosition;
fSDS_RY := M19.stAxisStatus.fActPosition;
fDPL_Z 	:= M3.stAxisStatus.fActPosition;

// Information about current motor
pMotorDUT := ADR (M1);
fbBwdEPS(eps := pMotorDut^.stEPSBackwardEnable);
fbFwdEPS(eps := pMotorDut^.stEPSForwardEnable);

fbEPS(eps:=aDPL_X_EPS[1].stEPS);
fbEPS.setBit(0, F_InRange(fDPL_X, 10, 80));

fbEPS(eps:=aDPL_X_EPS[2].stEPS);
fbEPS.setBit(0, F_InRange(fSDS_RY, 10, 30));

fbEPS(eps:=aDPL_X_EPS[3].stEPS);
fbEPS.setBit(0, F_InRange(fDPL_Z, 30, 80));

FOR nIndex := 1 TO 3 DO
    IF aDPL_X_EPS[PMPS.CheckBounds(nIndex, 1,3)].stEPS.bEPS_OK THEN
        nEPSIndex := nIndex;
    END_IF
END_FOR

IF fDPL_X > aDPL_X_EPS[nEPSIndex].fBwd_Limits THEN
    fbBwdEPS.setBit(UINT_TO_BYTE(nEPSIndex), TRUE);
ELSE
    fbBwdEPS.setBit(UINT_TO_BYTE(nEPSIndex), FALSE);
END_IF

IF fDPL_X < aDPL_X_EPS[nEPSIndex].fFwd_Limits THEN
    fbFwdEPS.setBit(UINT_TO_BYTE(nEPSIndex), TRUE);
ELSE
    fbFwdEPS.setBit(UINT_TO_BYTE(nEPSIndex), FALSE);
END_IF]]></ST>
    </Implementation>
  </POU>
</TcPlcObject>