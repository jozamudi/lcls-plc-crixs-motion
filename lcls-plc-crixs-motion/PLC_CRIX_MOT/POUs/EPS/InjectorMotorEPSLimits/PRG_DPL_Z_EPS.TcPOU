<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1" ProductVersion="3.1.4022.18">
  <POU Name="PRG_DPL_Z_EPS" Id="{2c285499-0d64-4304-a814-9959d7ef4cde}" SpecialFunc="None">
    <Declaration><![CDATA[PROGRAM PRG_DPL_Z_EPS
VAR
    bInit 		: BOOL := TRUE;
    nIndex 		: UINT;
    nEPSIndex 	: UINT;

    pMotorDUT	: POINTER TO DUT_MotionStage;
    fbBwdEPS 	: FB_EPS;
    fbFwdEPS 	: FB_EPS;
    fbEPS		: FB_EPS;

    fDPL_Z      : LREAL;
    fDPL_X      : LREAL;
    fRCC_Y      : LREAL;
    fRCC_Z      : LREAL;

END_VAR
]]></Declaration>
    <Implementation>
      <ST><![CDATA[IF bInit THEN
    // Set Inital Values
    aDPL_Z_EPS[1].fBwd_Limits := -10;
    aDPL_Z_EPS[1].fFwd_Limits := 100;

    aDPL_Z_EPS[2].fBwd_Limits := 30;
    aDPL_Z_EPS[2].fFwd_Limits := 100;

    aDPL_Z_EPS[3].fBwd_Limits := 30;
    aDPL_Z_EPS[3].fFwd_Limits := 100;

    aDPL_Z_EPS[4].fBwd_Limits := 30;
    aDPL_Z_EPS[4].fFwd_Limits := 100;

    bInit := FALSE;
END_IF

fDPL_Z := M3.fPosition;
fDPL_X := M1.fPosition;
fRCC_Y := M38.fPosition;
fRCC_Z := M39.fPosition;

pMotorDUT := ADR (M3);
fbBwdEPS(eps := pMotorDut^.stEPSBackwardEnable);
fbFwdEPS(eps := pMotorDut^.stEPSForwardEnable);

fbEPS(eps:=aDPL_Z_EPS[1].stEPS);
fbEPS.setBit(0, F_InRange(fDPL_Z, -10, 100));

fbEPS(eps:=aDPL_Z_EPS[2].stEPS);
fbEPS.setBit(0, F_InRange(fDPL_X, 10, 30));

fbEPS(eps:=aDPL_Z_EPS[3].stEPS);
fbEPS.setBit(0, F_InRange(fRCC_Y, -34, 10));
fbEPS.setBit(1, F_InRange(fRCC_Z, -15, 11));

fbEPS(eps:=aDPL_Z_EPS[4].stEPS);
fbEPS.setBit(0, F_InRange(fRCC_Y, -38, -34));
fbEPS.setBit(1, F_InRange(fRCC_Z, -15, 11));

FOR nIndex := 1 TO 4 DO
    IF aDPL_Z_EPS[nIndex].stEPS.bEPS_OK THEN
        nEPSIndex := nIndex;
    END_IF
END_FOR

IF fDPL_Z < aDPL_Z_EPS[nEPSIndex].fBwd_Limits THEN
    fbBwdEPS.setBit(0, FALSE);
ELSE
    fbBwdEPS.setBit(0, TRUE);
END_IF

IF fDPL_Z > aDPL_Z_EPS[nEPSIndex].fFwd_Limits THEN
    fbFwdEPS.setBit(0, FALSE);
ELSE
    fbFwdEPS.setBit(0, TRUE);
END_IF
]]></ST>
    </Implementation>
  </POU>
</TcPlcObject>