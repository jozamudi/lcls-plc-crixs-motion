<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1" ProductVersion="3.1.4022.18">
  <POU Name="PRG_SDS_RY_EPS" Id="{18466759-88d2-4c0f-bc51-f9ca798237c4}" SpecialFunc="None">
    <Declaration><![CDATA[PROGRAM PRG_SDS_RY_EPS
VAR
    {attribute 'pytmc' := 'pv: CRIX:SDS:MMS:RY:EPS'}
    aSDS_RY_EPS 	: ARRAY [1 .. 5] OF ST_EPSLimits;

    {attribute 'pytmc' := 'pv: CRIX:SDS:MMS:RY:EPS:OVRD_MODE'}
    bEPS_Override : BOOL := FALSE;

    {attribute 'pytmc' := 'pv: CRIX:SDS:MMS:RY:EPS:OVRD_COUNTDOWN'}
    tEPS_TimerCountDown : STRING := TIME_TO_STRING(T#0s);
    fbResetTimer : FB_RestTimer;

    bInit 		: BOOL := TRUE;

    bSDS_RY_FullRange : BOOL;

    fbEPS		: FB_EPS;
    fbCheckEPS 	: FB_CheckEPS;

END_VAR
]]></Declaration>
    <Implementation>
      <ST><![CDATA[IF bInit THEN
    // Set Inital Values
    aSDS_RY_EPS[1].fBwd_Limits := 124;
    aSDS_RY_EPS[1].fFwd_Limits := 217.8;

    aSDS_RY_EPS[2].fBwd_Limits := 215;
    aSDS_RY_EPS[2].fFwd_Limits := 217.8;

    aSDS_RY_EPS[3].fBwd_Limits := 215;
    aSDS_RY_EPS[3].fFwd_Limits := 217.8;

    aSDS_RY_EPS[4].fBwd_Limits := 124;
    aSDS_RY_EPS[4].fFwd_Limits := 134;

    aSDS_RY_EPS[5].fBwd_Limits := 124;
    aSDS_RY_EPS[5].fFwd_Limits := 134;

    bInit := FALSE;
END_IF

// Set EPS conditions
fbEPS(eps:=aSDS_RY_EPS[1].stEPS);
fbEPS.setDescription('SDS_Z_ENC in [3.05,3.4];SDS_Y in [30,38.5];RCC_Y in [-38,-34];DPL_X in [10,30]');
fbEPS.setBit(0, F_InRange(fSDS_Z_ENC, 3.05, 3.4));
fbEPS.setBit(1, F_InRange(fSDS_Y, 30, 38.5));
fbEPS.setBit(2, F_InRange(fRCC_Y, -38, -34));
fbEPS.setBit(3, F_InRange(fDPL_X, 10, 30));

bSDS_RY_FullRange := aSDS_RY_EPS[1].stEPS.bEPS_OK; // FULL RANGE CONDITION

fbEPS(eps:=aSDS_RY_EPS[2].stEPS);
fbEPS.setDescription('SDS_Z_ENC in [-1, 3.05]');
fbEPS.setBit(0, F_InRange(fSDS_Z_ENC, -1, 3.05));

fbEPS(eps:=aSDS_RY_EPS[3].stEPS);
fbEPS.setDescription('SDS_Z_ENC in [3.05, 3.4];SDS_RY in [215, 220];Not Full Range');
fbEPS.setBit(0, F_InRange(fSDS_Z_ENC, 3.05, 3.4));
fbEPS.setBit(1, F_InRange(fSDS_RY, 215, 220));
fbEPS.setBit(2, NOT bSDS_RY_FullRange); // NOT FULL RANGE COND.

fbEPS(eps:=aSDS_RY_EPS[4].stEPS);
fbEPS.setDescription('SDS_Z_ENC in [3.4, 4]');
fbEPS.setBit(0, F_InRange(fSDS_Z_ENC, 3.4, 4));

fbEPS(eps:=aSDS_RY_EPS[5].stEPS);
fbEPS.setDescription('SDS_Z_ENC in [3.05,3.4];SDS_RY in [124, 134];Not Full Range');
fbEPS.setBit(0, F_InRange(fSDS_Z_ENC, 3.05, 3.4));
fbEPS.setBit(1, F_InRange(fSDS_RY, 124, 134));
fbEPS.setBit(2, NOT bSDS_RY_FullRange); // NOT FULL RANGE COND.

fbResetTimer(bInput:=bEPS_Override, tElapseTime:=tEPS_OVRD_RESET_TIME, tCountDown:=tEPS_TimerCountDown);
fbCheckEPS(stMotor:=M19, fPosition:= fSDS_RY, aEPSLimits:= aSDS_RY_EPS, stForwardMotorEPS:=M19.stEPSForwardEnable, stBackwardMotorEPS:= M19.stEPSBackwardEnable, bEPS_Override:=bEPS_Override);]]></ST>
    </Implementation>
  </POU>
</TcPlcObject>